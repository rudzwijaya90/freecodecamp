function getIndexToIns(arr, num) {
  // Sort the array in ascending order
  arr.sort((a, b) => a - b);
  
  // Loop through the sorted array
  for (let i = 0; i < arr.length; i++) {
    // Find the first index where arr[i] is greater than or equal to num
    if (arr[i] >= num) {
      return i; // Return that index
    }
  }
  
  // If num is greater than all elements, return the end index
  return arr.length;
}

getIndexToIns([40, 60], 50);

/* Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted. The returned value should be a number.

For example, getIndexToIns([1,2,3,4], 1.5) should return 1 because it is greater than 1 (index 0), but less than 2 (index 1).

Likewise, getIndexToIns([20,3,5], 19) should return 2 because once the array has been sorted it will look like [3,5,20] and 19 is less than 20 (index 2) and greater than 5 (index 1). */

Quick ES6 implementation

function getIndexToIns(arr, num) {
  arr.push(num);
  return arr.sort((a,b)=>a-b).indexOf(num);
}